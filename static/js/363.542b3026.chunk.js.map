{"version":3,"file":"static/js/363.542b3026.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","pages/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  max-width: calc(100% - 40px);\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n  padding: 20px;\n  border: 1px solid #000000;\n  border-radius: 4px;\n  background-color: rgb(219, 225, 204, 0.5);\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-weight: 500;\n  margin-bottom: 4px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  min-width: 200px;\n  margin-bottom: 12px;\n  border-radius: 4px;\n  font-size: 14px;\n  @media screen and (min-width: 768px) {\n    min-width: 400px;\n  }\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectFilter, selectContacts],\n  (filter, contacts) => {\n    if (filter) {\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    } else {\n      return contacts;\n    }\n  }\n);\n","import { useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Form, Label, Input } from './ContactForm.styled';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nexport default function ContactForm() {\n  const initialState = { name: '', number: '' };\n  const [contact, setContact] = useState(initialState);\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    setContact(prevState => ({\n      ...prevState,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.find(({ name }) => name === contact.name)) {\n      return toast.error(`${contact.name} is already in contacts`);\n    }\n\n    for (const el of e.target.elements) {\n      const reg = new RegExp(el.pattern);\n      if (!reg.test(el.value)) {\n        return toast.error(el.title);\n      }\n    }\n    dispatch(addContact({ name: contact.name, number: contact.number }));\n    setContact(initialState);\n  };\n\n  const idName = nanoid();\n  const idphone = nanoid();\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor={idName}>Name</Label>\n      <Input\n        id={idName}\n        type=\"text\"\n        name=\"name\"\n        value={contact.name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleChange}\n      />\n\n      <Label htmlFor={idphone}>Phone</Label>\n      <Input\n        id={idphone}\n        type=\"tel\"\n        name=\"number\"\n        value={contact.number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleChange}\n      />\n\n      <button type=\"submit\" disabled={!contact.name || !contact.number}>\n        Add contact\n      </button>\n    </Form>\n  );\n}\n","import { Label, Input } from 'components/ContactForm/ContactForm.styled';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { useDispatch } from 'react-redux';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <>\n      <Label htmlFor=\"1\">Find contacts by name</Label>\n      <Input\n        id=\"1\"\n        type=\"text\"\n        name=\"filter\"\n        title=\"Use this field to filter contacts by contact's name\"\n        onChange={handleChangeFilter}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  max-width: calc(100% - 20px);\n  padding: 0;\n  @media screen and (min-width: var(--desktop)) {\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  font-weight: 500;\n  margin-bottom: 4px;\n\n  &::before {\n    content: '';\n    width: 6px;\n    height: 6px;\n    background-color: #000000;\n    border-radius: 50%;\n    margin-right: 10px;\n  }\n\n  & > button {\n    display: none;\n    width: 80px;\n  }\n\n  &:hover > button {\n    display: block;\n  }\n`;\n\nexport const Name = styled.span`\n  width: 240px;\n`;\n\nexport const Number = styled.span`\n  width: 120px;\n`;\n","import { List, Item, Name, Number } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <List>\n      {filteredContacts.map(({ id, name, number }) => (\n        <Item key={id}>\n          <Name>{name}:</Name>\n          <Number>{number}</Number>\n          <button onClick={() => dispatch(deleteContact(id))}>Delete</button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  max-width: calc(100% - 40px);\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px;\n  border: 1px solid #000000;\n  border-radius: 4px;\n  background-color: rgb(169, 194, 245, 0.5);\n  @media screen and (min-width: var(--tablet)) {\n    max-width: 460px;\n  }\n`;\n\nexport const TitlePhonebook = styled.h1`\n  max-width: 280px;\n  margin-bottom: 20px;\n  text-align: center;\n  color: aliceblue;\n  @media screen and (min-width: var(--tablet)) {\n    max-width: 460px;\n  }\n`;\nexport const TitleContacts = styled.h2`\n  margin-bottom: 20px;\n  text-align: center;\n  color: aliceblue;\n`;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nimport { Wrapper, TitlePhonebook, TitleContacts } from './Contacts.styled';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport Loader from '../Loader/Loader';\nimport { ToastContainer, toast } from 'react-toastify';\n\nexport function Contacts() {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  if (error) {\n    toast.error(`Somethitg has went wrong. The reason is: ` + error);\n  }\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ToastContainer />\n      <TitlePhonebook>Phonebook</TitlePhonebook>\n      <ContactForm />\n      <Wrapper>\n        <TitleContacts>Contacts</TitleContacts>\n        <Filter />\n        {isLoading && <Loader />}\n        {!isLoading && !error && <ContactList />}\n      </Wrapper>\n    </>\n  );\n}\n","import { Contacts } from 'components/Contacts/Contacts';\nimport { Helmet } from 'react-helmet';\n\nexport default function ContactsPage() {\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <Contacts />\n    </>\n  );\n}\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","filter","normalizedFilter","toLowerCase","contact","includes","ContactForm","initialState","number","_useState","useState","_useState2","_slicedToArray","setContact","useSelector","dispatch","useDispatch","handleChange","e","prevState","_objectSpread","_defineProperty","target","idName","nanoid","idphone","_jsxs","onSubmit","preventDefault","_ref","toast","_step","_iterator","_createForOfIteratorHelper","elements","s","n","done","el","RegExp","pattern","test","title","err","f","addContact","children","_jsx","htmlFor","id","type","required","onChange","disabled","_Fragment","setFilter","List","Item","Name","Number","_templateObject4","filteredContacts","onClick","deleteContact","Wrapper","TitlePhonebook","TitleContacts","Contacts","useEffect","fetchContacts","ToastContainer","Filter","Loader","ContactList","ContactsPage","Helmet"],"sourceRoot":""}