{"version":3,"file":"static/js/49.90ee38ec.chunk.js","mappings":"sRAEaA,EAAOC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qUAgBlBC,EAAQH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yEAMpBG,EAAQL,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4F,wCCflB,SAASK,IACtB,IAAMC,EAAe,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,IACtDC,GAAwBC,EAAAA,EAAAA,UAASL,GAAaM,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAEdI,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnBJ,GAAQ,SAAAK,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZD,GAAS,IAAAE,EAAAA,EAAAA,GAAA,GACXH,EAAEI,OAAOhB,KAAOY,EAAEI,OAAOC,OAAK,GAEnC,EAmBMC,GAASC,EAAAA,EAAAA,MACTC,GAASD,EAAAA,EAAAA,MACTE,GAAaF,EAAAA,EAAAA,MACnB,OACEG,EAAAA,EAAAA,MAAChC,EAAI,CAACiC,SArBa,SAAAX,GACnBA,EAAEY,iBACF,IAAMC,EAAOb,EAAEI,OACTU,EAAW,IAAIC,SAASF,GACxBG,EAAWC,OAAOC,YAAYJ,EAASK,WAC7CtB,GAASuB,EAAAA,EAAAA,IAASJ,IAAWK,MAAK,SAAAC,GACzB,OAAHA,QAAG,IAAHA,GAAAA,EAAKC,OACPC,EAAAA,GAAAA,MACE,wFAGN,IAEA5B,EAAQT,GACR0B,EAAKY,OACP,EAM+BC,SAAA,EAC3BC,EAAAA,EAAAA,KAAC7C,EAAK,CAAC8C,QAAStB,EAAOoB,SAAC,UACxBC,EAAAA,EAAAA,KAAC3C,EAAK,CACJ6C,GAAIvB,EACJwB,KAAK,OACL1C,KAAK,OACLiB,MAAOV,EAAKP,KACZ2C,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUnC,KAGZ4B,EAAAA,EAAAA,KAAC7C,EAAK,CAAC8C,QAASpB,EAAOkB,SAAC,YACxBC,EAAAA,EAAAA,KAAC3C,EAAK,CACJ6C,GAAIrB,EACJsB,KAAK,QACL1C,KAAK,QACLiB,MAAOV,EAAKN,MACZ0C,QAAQ,wCACRC,MAAM,sFACNC,UAAQ,EACRC,SAAUnC,KAGZ4B,EAAAA,EAAAA,KAAC7C,EAAK,CAAC8C,QAASnB,EAAWiB,SAAC,cAC5BC,EAAAA,EAAAA,KAAC3C,EAAK,CACJ6C,GAAIpB,EACJqB,KAAK,WACL1C,KAAK,WACLiB,MAAOV,EAAKL,SACZyC,QAAQ,2CACRC,MAAM,+IACNC,UAAQ,EACRC,SAAUnC,KAGZ4B,EAAAA,EAAAA,KAAA,UAAQG,KAAK,SAASK,UAAWxC,EAAKN,QAAUM,EAAKL,SAASoC,SAAC,eAKrE,CCjFe,SAASU,IACtB,OACE1B,EAAAA,EAAAA,MAAA,OAAAgB,SAAA,EACEC,EAAAA,EAAAA,KAACU,EAAAA,GAAc,KACfV,EAAAA,EAAAA,KAACW,EAAAA,EAAM,CAAAZ,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBAETC,EAAAA,EAAAA,KAACzC,EAAgB,MAGvB,C","sources":["components/RegistrationForm/RegistrationForm.styled.jsx","components/RegistrationForm/RegistrationForm.jsx","pages/RegistrationPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 270px;\n  margin-bottom: 20px;\n  padding: 20px;\n  border: 1px solid #000000;\n  border-radius: 4px;\n  background-color: rgb(219, 225, 204, 0.5);\n  @media screen and (min-width: 768px) {\n    max-width: 460px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-weight: 500;\n  margin-bottom: 4px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  margin-bottom: 12px;\n  border-radius: 4px;\n`;\n","import { useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Form, Label, Input } from './RegistrationForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { toast } from 'react-toastify';\n\nexport default function RegistrationForm() {\n  const initialState = { name: '', email: '', password: '' };\n  const [user, setUser] = useState(initialState);\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    setUser(prevState => ({\n      ...prevState,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const formData = new FormData(form);\n    const userData = Object.fromEntries(formData.entries());\n    dispatch(register(userData)).then(res => {\n      if (res?.error) {\n        toast.error(\n          'Probably, you are registered with your login/password already. Or your email is wrong'\n        );\n      }\n    });\n\n    setUser(initialState);\n    form.reset();\n  };\n\n  const idName = nanoid();\n  const idMail = nanoid();\n  const idPassword = nanoid();\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor={idName}>Name</Label>\n      <Input\n        id={idName}\n        type=\"text\"\n        name=\"name\"\n        value={user.name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleChange}\n      />\n\n      <Label htmlFor={idMail}>E-mail</Label>\n      <Input\n        id={idMail}\n        type=\"email\"\n        name=\"email\"\n        value={user.email}\n        pattern=\"^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$\"\n        title=\"It is not look like e-mail. At least, your e-mail have to contain symbol '@' inside\"\n        required\n        onChange={handleChange}\n      />\n\n      <Label htmlFor={idPassword}>Password</Label>\n      <Input\n        id={idPassword}\n        type=\"password\"\n        name=\"password\"\n        value={user.password}\n        pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$\"\n        title=\"Password has to be from 6 to 20 characters, which contain at least one numeric digit, one uppercase and one lowercase letter (latin symbols)\"\n        required\n        onChange={handleChange}\n      />\n\n      <button type=\"submit\" disabled={!user.email || !user.password}>\n        Register\n      </button>\n    </Form>\n  );\n}\n","import { Helmet } from 'react-helmet';\nimport RegistrationForm from 'components/RegistrationForm/RegistrationForm';\nimport { ToastContainer } from 'react-toastify';\n\nexport default function RegistrationPage() {\n  return (\n    <div>\n      <ToastContainer />\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegistrationForm />\n    </div>\n  );\n}\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","RegistrationForm","initialState","name","email","password","_useState","useState","_useState2","_slicedToArray","user","setUser","dispatch","useDispatch","handleChange","e","prevState","_objectSpread","_defineProperty","target","value","idName","nanoid","idMail","idPassword","_jsxs","onSubmit","preventDefault","form","formData","FormData","userData","Object","fromEntries","entries","register","then","res","error","toast","reset","children","_jsx","htmlFor","id","type","pattern","title","required","onChange","disabled","RegistrationPage","ToastContainer","Helmet"],"sourceRoot":""}